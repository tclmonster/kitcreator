name: Build Linux kits
on: workflow_dispatch
env:
  TCL_TK_VERSION: 8.6.15
  KC_TLS_LINKSSLSTATIC: 1
  STATICTK: 0
  STATICTKSVG: 0
  STATICTLS: 1
  STATICTDOM: 1
  STATICTCLX: 1
  STATICPARSE_ARGS: 1
  STATICTRF: 1
  STATICZLIBTCL: 1
  STATICTCLLIB: 1
  STATICMK4: 1
  KC_MK4TCL_CXXFLAGS: '-fPIC'

jobs:
  build-kits:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        platform:
          - arch:       x86_64
            pkg_prefix: amd64
            cross_pfx:  x86_64-linux-gnu
            host:       x86_64-pc-linux-gnu
          - arch:       aarch64
            pkg_prefix: arm64
            cross_pfx:  aarch64-linux-gnu
            host:       aarch64-generic-linux-gnu

    env:
      arch:       ${{matrix.platform.arch}}
      pkg_prefix: ${{matrix.platform.pkg_prefix}}
      suffix:     ${{matrix.platform.arch}}-linux
      KC_TLS_SSLDIR: /usr/lib/${{matrix.platform.cross_pfx}}/pkgconfig
      CC:   ${{matrix.platform.cross_pfx}}-gcc
      CXX:  ${{matrix.platform.cross_pfx}}-g++
      AR:   ${{matrix.platform.cross_pfx}}-ar
      RANLIB: ${{matrix.platform.cross_pfx}}-ranlib
      NM:     ${{matrix.platform.cross_pfx}}-nm
      HOST: ${{matrix.platform.host}}

    steps:
      - uses: actions/checkout@v4
      - name: Dump Pkg mirrors
        run: |
          for li in $(ls /etc/apt/sources.list.d/); do
            echo "$li:"
            sudo cat $li
          done
          echo "apt-mirrors.txt:"
          sudo cat /etc/apt/apt-mirrors.txt
          exit 1
      - name: Setup dependencies
        run: |
          sudo dpkg --add-architecture ${{env.pkg_prefix}}
          sudo sed -i 's|http://azure.archive.ubuntu.com/ubuntu|http://ports.ubuntu.com/ubuntu-ports|g' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
                  build-essential \
                  crossbuild-essential-${{env.pkg_prefix}} \
                  autoconf \
                  libssl-dev:${{env.pkg_prefix}}

      - name: Base kit
        env:
          KITCREATOR_PKGS: mk4tcl
        run: |
          ./build/pre.sh
          ./kitcreator build ${{env.TCL_TK_VERSION}} --host=${{env.HOST}} --enable-64bit
          mv tclkit-${{env.TCL_TK_VERSION}} tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}-minimal

      - name: Standard kit (No GUI)
        env:
          KITCREATOR_PKGS: 'tcllib tls tdom tclx parse_args Trf zlibtcl mk4tcl'
        run: |
          ./kitcreator retry ${{env.TCL_TK_VERSION}} \
              --with-tclsh=$(pwd)/tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}-minimal \
              --enable-tcl-private-headers \
              --host=${{ env.HOST }} \
              --enable-64bit
          mv tclkit-${{env.TCL_TK_VERSION}} tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}

      - name: Full kit (with GUI)
        env:
          KITCREATOR_PKGS: 'tk tksvg tcllib tls tdom tclx parse_args Trf zlibtcl mk4tcl'
        run: |
          ./kitcreator retry ${{env.TCL_TK_VERSION}} \
              --with-tclsh=$(pwd)/tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}-minimal \
              --enable-tcl-private-headers \
              --host=${{ env.HOST }} \
              --enable-64bit
          mv tclkit-${{env.TCL_TK_VERSION}} tclkit-${{env.TCL_TK_VERSION}}-${{env.suffix}}

      - name: Kit SDK
        env:
          KITCREATOR_PKGS: 'tk mk4tcl kitdll'
          STATICTK: 1
        run: |
          clean_all_but_tcl_and_mk4() {
            for pkg in $(ls */build.sh | cut -d/ -f1 | egrep -v '^(tcl|mk4tcl)$'); do
              rm -f  "${pkg}/.success"
              rm -rf "${pkg}/out" "${pkg}/inst" "${pkg}/build"
            done
          }
          clean_all_but_tcl_and_mk4
          ./kitcreator retry ${{env.TCL_TK_VERSION}} \
              --with-tclsh=$(pwd)/tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}-minimal \
              --enable-tcl-private-headers \
              --host=${{ env.HOST }} \
              --enable-64bit
          mv libtclkit-sdk-${{env.TCL_TK_VERSION}}.tar.gz \
             libtclkit-sdk-${{env.TCL_TK_VERSION}}-${{env.suffix}}.tar.gz

      - name: Upload kitcreator output
        uses: actions/upload-artifact@v4
        with:
          name: kitcreator-${{ env.arch }}-output
          path: |
            **/build.log
            **/config.log
            tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}-minimal
            tclkitsh-${{env.TCL_TK_VERSION}}-${{env.suffix}}
            tclkit-${{env.TCL_TK_VERSION}}-${{env.suffix}}
            libtclkit-sdk-${{env.TCL_TK_VERSION}}-${{env.suffix}}.tar.gz
        if: ${{ !cancelled() }}
